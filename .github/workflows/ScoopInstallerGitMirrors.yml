# 工作流名称
name: Git Sync (ScoopInstaller)

# 触发条件
on: 
  # 当有人Star此仓库时触发（用于手动触发）
  watch:
    types: [started]
  # 定时任务：每天 UTC 19:00 (北京时间次日 03:00) 触发
  schedule:
  - cron: "0 19 * * *"
  # 允许手动从 Actions 页面触发
  workflow_dispatch:

# 作业
jobs:
  # 定义一个名为 sync-mirrors 的作业
  sync-mirrors:
    runs-on: ubuntu-latest
    
    # 使用 strategy.matrix 来定义变化的配置
    strategy:
      # 设置 fail-fast 为 false，这样即使一个镜像同步失败，其他镜像也会继续
      fail-fast: false
      matrix:
        # -----------------------------------------------------
        # 配置区：未来只需在此处添加平台和仓库
        # -----------------------------------------------------

        # 1. 定义目标平台
        #    auth: 'ssh' 表示使用密钥认证
        #    auth: 'https' 表示使用账号密码认证
        platform:
          - name: Gitee
            auth: 'ssh'
            dest_base: 'git@gitee.com:ScoopInstaller_Mirrors/'
            secret_name: 'GITEE_PRIVATE_KEY'

          - name: Coding
            auth: 'ssh'
            dest_base: 'git@e.coding.net:huiaei/ScoopInstaller_Mirrors/'
            secret_name: 'CODING_PRIVATE_KEY'

          - name: CNB
            auth: 'https'
            # HTTPS 的 dest_base 不包含协议和认证信息
            dest_base: 'cnb.cool/ScoopInstaller_Mirrors/' 
            # 存放用户名的 secret 名称
            username_secret: 'CNB_USERNAME'
            # 存放密码或访问令牌的 secret 名称
            password_secret: 'CNB_ACCESS_TOKEN' # 建议使用 Access Token 而非原始密码
        
        # 2. 定义需要同步的仓库
        repo:
          - { name: Scoop, org: ScoopInstaller }
          - { name: Main, org: ScoopInstaller }
          - { name: Extras, org: ScoopInstaller }
          - { name: Versions, org: ScoopInstaller }
          - { name: Nirsoft, org: ScoopInstaller }
          - { name: PHP, org: ScoopInstaller }
          - { name: Nonportable, org: ScoopInstaller }
          - { name: Java, org: ScoopInstaller }
          - { name: Tests, org: ScoopInstaller }
          - { name: scoop-games, org: Calinou, dest_name: Games }
          - { name: scoop-sysinternals, org: niheaven, dest_name: Sysinternals }
          - { name: scoop-nerd-fonts, org: matthewjberger, dest_name: 'Nerd-fonts' }

    # 作业步骤
    steps:
      # 步骤 1: 处理所有使用 SSH 认证的平台
      - name: Sync ${{ matrix.repo.org }}/${{ matrix.repo.name }} to ${{ matrix.platform.name }} (via SSH)
        # 仅当平台 auth 类型为 'ssh' 时运行此步骤
        if: matrix.platform.auth == 'ssh'
        uses: wearerequired/git-mirror-action@v5
        env:
          SSH_PRIVATE_KEY: ${{ secrets[matrix.platform.secret_name] }}
        with:
          source-repo: "git@github.com:${{ matrix.repo.org }}/${{ matrix.repo.name }}.git"
          destination-repo: "${{ matrix.platform.dest_base }}${{ matrix.repo.dest_name || matrix.repo.name }}.git"

      # 步骤 2: 处理所有使用 HTTPS 认证的平台
      - name: Sync ${{ matrix.repo.org }}/${{ matrix.repo.name }} to ${{ matrix.platform.name }} (via HTTPS)
        # 仅当平台 auth 类型为 'https' 时运行此步骤
        if: matrix.platform.auth == 'https'
        uses: wearerequired/git-mirror-action@v5
        with:
          source-repo: "git@github.com:${{ matrix.repo.org }}/${{ matrix.repo.name }}.git"
          # 动态构建包含认证信息的 HTTPS URL
          destination-repo: "https://${{ secrets[matrix.platform.username_secret] }}:${{ secrets[matrix.platform.password_secret] }}@${{ matrix.platform.dest_base }}${{ matrix.repo.dest_name || matrix.repo.name }}.git"
